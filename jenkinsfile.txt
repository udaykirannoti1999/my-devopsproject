pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'
        AWS_ACCOUNT_ID = '703671913075'
        GIT_REPO = 'https://github.com/udaykirannoti1999/my-devopsproject.git'
        ECR_REPO = ''
        IMAGE_TAG = ''
    }

    stages {
        stage('Checkout') {
            steps {
                script {
                    sh "rm -rf workspace || true"
                    sh "git clone ${GIT_REPO} workspace"

                    dir('workspace') {
                        BRANCH_NAME = sh(script: "git rev-parse --abbrev-ref HEAD", returnStdout: true).trim()
                        echo "Current Git Branch: ${BRANCH_NAME}"
                    }
                }
            }
        }

        stage('Determine ECR Repository') {
            steps {
                script {
                    if (BRANCH_NAME == 'Dev-branch') {
                        ECR_REPO = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/myapp-dev"
                    } else if (BRANCH_NAME == 'Preprod') {
                        ECR_REPO = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/prod-repo"
                    } else if (BRANCH_NAME == 'main') {
                        ECR_REPO = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/prod"
                    } else {
                        error "Branch ${BRANCH_NAME} is not configured for deployment."
                    }
                    echo "Target ECR Repository: ${ECR_REPO}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    IMAGE_TAG = "${BRANCH_NAME}-${BUILD_NUMBER}"
                    dir('workspace') {
                        sh "docker build -t ${ECR_REPO}:${IMAGE_TAG} ."
                    }
                }
            }
        }

        stage('Authenticate with AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com"
                }
            }
        }

        stage('Push Image to ECR') {
            steps {
                script {
                    echo "Pushing Docker image: ${ECR_REPO}:${IMAGE_TAG}"
                    sh "docker push ${ECR_REPO}:${IMAGE_TAG}"
                }
            }
        }

        stage('Cleanup') {
            steps {
                script {
                    sh "docker rmi ${ECR_REPO}:${IMAGE_TAG} || true"
                    sh "rm -rf workspace"
                }
            }
        }
    }
}
