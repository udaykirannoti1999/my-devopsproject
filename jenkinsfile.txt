pipeline {
    agent any

    environment {
        REGION = 'ap-south-1'  // Replace with your AWS region
        ECR_REPO = '703671913075.dkr.ecr.ap-south-1.amazonaws.com'  // Single ECR repository for all environments
        GIT_REPO = 'https://github.com/udaykirannoti1999/my-devopsproject.git'  // Replace with your repository URL
        AWS_ACCOUNT_ID = '703671913075'  // Replace with your AWS Account ID
    }

    stages {
        stage('Clone Repository') {
            steps {
                sh 'git clone -b ${env.BRANCH_NAME} $GIT_REPO source_code'
            }
        }

        stage('Login to AWS ECR') {
            steps {
                sh '''
                aws ecr get-login-password --region $REGION | \
                docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com
                '''
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh 'cd source_code && docker build -t myapp:${env.BRANCH_NAME} .'
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    def tag = env.BRANCH_NAME
                    
                    sh """
                    docker tag myapp:${env.BRANCH_NAME} $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO:$tag
                    docker push $AWS_ACCOUNT_ID.dkr.ecr.$REGION.amazonaws.com/$ECR_REPO:$tag
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                sh '''
                if docker images -q myapp:${env.BRANCH_NAME} > /dev/null; then
                    docker rmi myapp:${env.BRANCH_NAME}
                else
                    echo "Image myapp:${env.BRANCH_NAME} does not exist, skipping removal."
                fi
                '''
            }
        }
    }
}
