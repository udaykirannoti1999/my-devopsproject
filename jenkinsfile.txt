pipeline {
    agent any

    environment {
        AWS_REGION = 'ap-south-1'  // Change as needed
        AWS_ACCOUNT_ID = '703671913075'  // Replace with your AWS account ID
        ECR_REPOSITORY = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/myapp-prod" // Replace with your actual ECR repo name
        
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Set Image Tag') {
            steps {
                script {
                    def branchName = env.BRANCH_NAME
                    def tag = ''

                    if (branchName == 'dev') {
                        tag = 'dev'
                    } else if (branchName == 'preprod') {
                        tag = 'preprod'
                    } else if (branchName == 'prod') {
                        tag = 'latest'
                    } else {
                        error "Unsupported branch: ${branchName}"
                    }

                    env.IMAGE_TAG = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY}:${tag}"
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                sh '''
                    echo "Building Docker image..."
                    docker build -t $IMAGE_TAG .
                '''
            }
        }

        stage('Login to ECR') {
            steps {
                script {
                    sh '''
                        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
                    '''
                }
            }
        }

        stage('Push to ECR') {
            steps {
                sh '''
                    echo "Pushing Docker image to ECR..."
                    docker push $IMAGE_TAG
                '''
            }
        }

        stage('Cleanup') {
            steps {
                sh '''
                    echo "Removing local Docker images..."
                    docker rmi $IMAGE_TAG || true
                '''
            }
        }
    }
}
